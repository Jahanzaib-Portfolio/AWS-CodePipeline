# Buildspec file for AWS CodeBuild (version 0.2)
version: 0.2

# Environment variables stored securely in AWS Systems Manager Parameter Store
env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /myapp/docker-credentials/username  # Docker Hub or private registry username
    DOCKER_REGISTRY_PASSWORD: /myapp/docker-credentials/password  # Docker password/token
    DOCKER_REGISTRY_URL: /myapp/docker-registry/url               # Registry URL (e.g., https://index.docker.io/v1/ for Docker Hub)

# Build phases
phases:
  install:
    commands:
      - echo "Installing required tools on Amazon Linux ARM..."
      - yum clean all || true
      - yum install -y tar gzip shadow-utils curl python3 python3-pip docker || true
      - service docker start || true
      - usermod -a -G docker $USER || true

  pre_build:
    commands:
      - echo "Installing Python dependencies..."
      - pip3 install -r requirements.txt

  build:
    commands:
      - echo "Building and pushing Docker image..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/simple-python-flask-app:latest" .
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/simple-python-flask-app:latest"

  post_build:
    commands:
      - echo "Build completed successfully."

# Artifacts configuration (used to export or retain build outputs)
artifacts:
  files:
    - '**/*'
  base-directory: AWS-CodePipeline
